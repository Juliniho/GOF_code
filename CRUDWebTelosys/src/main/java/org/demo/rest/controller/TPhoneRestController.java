/*
 * Created on 4 mar 2017 ( Time 18:53:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.TPhone;
import org.demo.business.service.TPhoneService;
import org.demo.web.listitem.TPhoneListItem;

/**
 * Spring MVC controller for 'TPhone' management.
 */
@Controller
public class TPhoneRestController {

	@Resource
	private TPhoneService tPhoneService;
	
	@RequestMapping( value="/items/tPhone",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TPhoneListItem> findAllAsListItems() {
		List<TPhone> list = tPhoneService.findAll();
		List<TPhoneListItem> items = new LinkedList<TPhoneListItem>();
		for ( TPhone tPhone : list ) {
			items.add(new TPhoneListItem( tPhone ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tPhone",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TPhone> findAll() {
		return tPhoneService.findAll();
	}

	@RequestMapping( value="/tPhone/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TPhone findOne(@PathVariable("id") Long id) {
		return tPhoneService.findById(id);
	}
	
	@RequestMapping( value="/tPhone",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TPhone create(@RequestBody TPhone tPhone) {
		return tPhoneService.create(tPhone);
	}

	@RequestMapping( value="/tPhone/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TPhone update(@PathVariable("id") Long id, @RequestBody TPhone tPhone) {
		return tPhoneService.update(tPhone);
	}

	@RequestMapping( value="/tPhone/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		tPhoneService.delete(id);
	}
	
}
