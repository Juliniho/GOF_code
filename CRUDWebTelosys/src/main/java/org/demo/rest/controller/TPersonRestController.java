/*
 * Created on 4 mar 2017 ( Time 18:53:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.TPerson;
import org.demo.business.service.TPersonService;
import org.demo.web.listitem.TPersonListItem;

/**
 * Spring MVC controller for 'TPerson' management.
 */
@Controller
public class TPersonRestController {

	@Resource
	private TPersonService tPersonService;
	
	@RequestMapping( value="/items/tPerson",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TPersonListItem> findAllAsListItems() {
		List<TPerson> list = tPersonService.findAll();
		List<TPersonListItem> items = new LinkedList<TPersonListItem>();
		for ( TPerson tPerson : list ) {
			items.add(new TPersonListItem( tPerson ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tPerson",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TPerson> findAll() {
		return tPersonService.findAll();
	}

	@RequestMapping( value="/tPerson/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TPerson findOne(@PathVariable("id") Long id) {
		return tPersonService.findById(id);
	}
	
	@RequestMapping( value="/tPerson",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TPerson create(@RequestBody TPerson tPerson) {
		return tPersonService.create(tPerson);
	}

	@RequestMapping( value="/tPerson/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TPerson update(@PathVariable("id") Long id, @RequestBody TPerson tPerson) {
		return tPersonService.update(tPerson);
	}

	@RequestMapping( value="/tPerson/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		tPersonService.delete(id);
	}
	
}
