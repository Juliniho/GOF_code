/*
 * Created on 4 mar 2017 ( Time 18:53:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.TPhone;
import org.demo.bean.jpa.TPhoneEntity;
import org.demo.business.service.TPhoneService;
import org.demo.business.service.mapping.TPhoneServiceMapper;
import org.demo.data.repository.jpa.TPhoneJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of TPhoneService
 */
@Component
@Transactional
public class TPhoneServiceImpl implements TPhoneService {

	@Resource
	private TPhoneJpaRepository tPhoneJpaRepository;

	@Resource
	private TPhoneServiceMapper tPhoneServiceMapper;
	
	@Override
	public TPhone findById(Long id) {
		TPhoneEntity tPhoneEntity = tPhoneJpaRepository.findOne(id);
		return tPhoneServiceMapper.mapTPhoneEntityToTPhone(tPhoneEntity);
	}

	@Override
	public List<TPhone> findAll() {
		Iterable<TPhoneEntity> entities = tPhoneJpaRepository.findAll();
		List<TPhone> beans = new ArrayList<TPhone>();
		for(TPhoneEntity tPhoneEntity : entities) {
			beans.add(tPhoneServiceMapper.mapTPhoneEntityToTPhone(tPhoneEntity));
		}
		return beans;
	}

	@Override
	public TPhone save(TPhone tPhone) {
		return update(tPhone) ;
	}

	@Override
	public TPhone create(TPhone tPhone) {
		TPhoneEntity tPhoneEntity = tPhoneJpaRepository.findOne(tPhone.getId());
		if( tPhoneEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		tPhoneEntity = new TPhoneEntity();
		tPhoneServiceMapper.mapTPhoneToTPhoneEntity(tPhone, tPhoneEntity);
		TPhoneEntity tPhoneEntitySaved = tPhoneJpaRepository.save(tPhoneEntity);
		return tPhoneServiceMapper.mapTPhoneEntityToTPhone(tPhoneEntitySaved);
	}

	@Override
	public TPhone update(TPhone tPhone) {
		TPhoneEntity tPhoneEntity = tPhoneJpaRepository.findOne(tPhone.getId());
		tPhoneServiceMapper.mapTPhoneToTPhoneEntity(tPhone, tPhoneEntity);
		TPhoneEntity tPhoneEntitySaved = tPhoneJpaRepository.save(tPhoneEntity);
		return tPhoneServiceMapper.mapTPhoneEntityToTPhone(tPhoneEntitySaved);
	}

	@Override
	public void delete(Long id) {
		tPhoneJpaRepository.delete(id);
	}

	public TPhoneJpaRepository getTPhoneJpaRepository() {
		return tPhoneJpaRepository;
	}

	public void setTPhoneJpaRepository(TPhoneJpaRepository tPhoneJpaRepository) {
		this.tPhoneJpaRepository = tPhoneJpaRepository;
	}

	public TPhoneServiceMapper getTPhoneServiceMapper() {
		return tPhoneServiceMapper;
	}

	public void setTPhoneServiceMapper(TPhoneServiceMapper tPhoneServiceMapper) {
		this.tPhoneServiceMapper = tPhoneServiceMapper;
	}

}
