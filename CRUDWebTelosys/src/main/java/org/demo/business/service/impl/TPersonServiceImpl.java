/*
 * Created on 4 mar 2017 ( Time 18:53:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.TPerson;
import org.demo.bean.jpa.TPersonEntity;
import java.util.List;
import org.demo.business.service.TPersonService;
import org.demo.business.service.mapping.TPersonServiceMapper;
import org.demo.data.repository.jpa.TPersonJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of TPersonService
 */
@Component
@Transactional
public class TPersonServiceImpl implements TPersonService {

	@Resource
	private TPersonJpaRepository tPersonJpaRepository;

	@Resource
	private TPersonServiceMapper tPersonServiceMapper;
	
	@Override
	public TPerson findById(Long id) {
		TPersonEntity tPersonEntity = tPersonJpaRepository.findOne(id);
		return tPersonServiceMapper.mapTPersonEntityToTPerson(tPersonEntity);
	}

	@Override
	public List<TPerson> findAll() {
		Iterable<TPersonEntity> entities = tPersonJpaRepository.findAll();
		List<TPerson> beans = new ArrayList<TPerson>();
		for(TPersonEntity tPersonEntity : entities) {
			beans.add(tPersonServiceMapper.mapTPersonEntityToTPerson(tPersonEntity));
		}
		return beans;
	}

	@Override
	public TPerson save(TPerson tPerson) {
		return update(tPerson) ;
	}

	@Override
	public TPerson create(TPerson tPerson) {
		TPersonEntity tPersonEntity = tPersonJpaRepository.findOne(tPerson.getId());
		if( tPersonEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		tPersonEntity = new TPersonEntity();
		tPersonServiceMapper.mapTPersonToTPersonEntity(tPerson, tPersonEntity);
		TPersonEntity tPersonEntitySaved = tPersonJpaRepository.save(tPersonEntity);
		return tPersonServiceMapper.mapTPersonEntityToTPerson(tPersonEntitySaved);
	}

	@Override
	public TPerson update(TPerson tPerson) {
		TPersonEntity tPersonEntity = tPersonJpaRepository.findOne(tPerson.getId());
		tPersonServiceMapper.mapTPersonToTPersonEntity(tPerson, tPersonEntity);
		TPersonEntity tPersonEntitySaved = tPersonJpaRepository.save(tPersonEntity);
		return tPersonServiceMapper.mapTPersonEntityToTPerson(tPersonEntitySaved);
	}

	@Override
	public void delete(Long id) {
		tPersonJpaRepository.delete(id);
	}

	public TPersonJpaRepository getTPersonJpaRepository() {
		return tPersonJpaRepository;
	}

	public void setTPersonJpaRepository(TPersonJpaRepository tPersonJpaRepository) {
		this.tPersonJpaRepository = tPersonJpaRepository;
	}

	public TPersonServiceMapper getTPersonServiceMapper() {
		return tPersonServiceMapper;
	}

	public void setTPersonServiceMapper(TPersonServiceMapper tPersonServiceMapper) {
		this.tPersonServiceMapper = tPersonServiceMapper;
	}

}
