/*
 * Created on 4 mar 2017 ( Time 18:53:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "t_id_card"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_card", catalog="testjpadb" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdCardEntity.countAll", query="SELECT COUNT(x) FROM TIdCardEntity x" )
} )
public class TIdCardEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="ID_NUMBER", length=255)
    private String     idNumber     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ISSUE_DATE")
    private Date       issueDate    ;

    @Column(name="VALID")
    private Integer    valid        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="tIdCard", targetEntity=TPersonEntity.class)
    private List<TPersonEntity> listOfTPerson;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdCardEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : ID_NUMBER ( VARCHAR ) 
    public void setIdNumber( String idNumber ) {
        this.idNumber = idNumber;
    }
    public String getIdNumber() {
        return this.idNumber;
    }

    //--- DATABASE MAPPING : ISSUE_DATE ( DATETIME ) 
    public void setIssueDate( Date issueDate ) {
        this.issueDate = issueDate;
    }
    public Date getIssueDate() {
        return this.issueDate;
    }

    //--- DATABASE MAPPING : VALID ( INT ) 
    public void setValid( Integer valid ) {
        this.valid = valid;
    }
    public Integer getValid() {
        return this.valid;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfTPerson( List<TPersonEntity> listOfTPerson ) {
        this.listOfTPerson = listOfTPerson;
    }
    public List<TPersonEntity> getListOfTPerson() {
        return this.listOfTPerson;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(idNumber);
        sb.append("|");
        sb.append(issueDate);
        sb.append("|");
        sb.append(valid);
        return sb.toString(); 
    } 

}
